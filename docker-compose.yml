services:
  db:
    user: postgres
    image: postgres:17.0-alpine3.20
    container_name: ${DB_HOST}
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      APP_USER_PASSWORD: ${APP_USER_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - haqa_db_data:/var/lib/postgresql/data
      - ./HAQA-DB/sql:/opt/sql-templates:ro
      - ./HAQA-DB/postgres-init.sh:/docker-entrypoint-initdb.d/init.sh:ro
    restart: unless-stopped
    networks:
      - haqa-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:8.2.1-alpine3.22
    container_name: ${REDIS_HOST}
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - haqa_redis_data:/data
      - ./HAQA-REDIS/redis.conf:/tmp/redis.conf:ro
    command: >
      sh -c "cp /tmp/redis.conf /tmp/redis-running.conf &&
             sed -i 's|>#PASSWORD|>'${REDIS_ADMIN_PASSWORD}'|' /tmp/redis-running.conf &&
             sed -i 's|user app on >#PASSWORD|user app on >'${REDIS_APP_PASSWORD}'|' /tmp/redis-running.conf &&
             redis-server /tmp/redis-running.conf"
    restart: unless-stopped
    networks:
      - haqa-network
    environment:
      - REDIS_ADMIN_PASSWORD=${REDIS_ADMIN_PASSWORD}
      - REDIS_APP_PASSWORD=${REDIS_APP_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  haqa_db_data:
  haqa_data_tablespace:
  haqa_index_tablespace:
  haqa_redis_data:

networks:
  haqa-network:
    driver: bridge